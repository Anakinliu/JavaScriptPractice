<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>object.create</title>
</head>
<body>
<script>
function Phone(screen, RAM, ROM) {
    this.screen = screen || 6.0;
    this.RAM = RAM || 6;
    this.ROM = ROM || 128;
}
Phone.prototype.callSB = function(sb) {
    console.log('打电话给： ' + sb + '....');
}

function Android() {
    Phone.call(this);
    this.name = '安卓';
}
Android.prototype = Object.create(Phone.prototype);
Android.prototype.constructor = Android;
Android.prototype.setBrand = function(brand) {
    this.brand = brand;
}
Android.prototype.getBrand = function() {
    return '此手机品牌是' +　this.brand;
}
Android.prototype.getPermission = function() {
    console.log('需要root权限');
}

function Apple() {
    this.name = '水果';
}

Apple.prototype = Object.create(Phone.prototype);
Apple.prototype.constructor = Apple;
Apple.prototype.getPermission = function() {
    console.log('需要越狱');
}

meizu = new Android();
meizu.setBrand('魅族');
console.log(meizu.getBrand());

// ALL true，一直到 null
console.log(meizu.__proto__ === Android.prototype);
console.log(meizu.__proto__.__proto__ === Phone.prototype);
console.log(meizu.__proto__.__proto__.__proto__ === Object.prototype);
console.log(meizu.__proto__.__proto__.__proto__.__proto__ === null);

// ALL true
console.log(Phone.prototype.constructor === Phone);
console.log(Android.prototype.constructor === Android);
console.log(Apple.prototype.constructor === Apple);
console.log(Object.prototype.constructor === Object);
console.log(Function.prototype.constructor === Function);

// All true，所有函数的原形 __proto__ 都是函数原形 Function.prototype
console.log(Phone.__proto__ === Function.prototype);
console.log(Android.__proto__ === Function.prototype);
console.log(Apple.__proto__ === Function.prototype);
console.log(Object.__proto__ === Function.prototype);
console.log(Function.__proto__ === Function.prototype);

//All true
console.log(Apple.prototype.__proto__ === Phone.prototype);
console.log(Android.prototype.__proto__ === Phone.prototype);
console.log(Function.prototype.__proto__ === Object.prototype);

// true
console.log(Object.prototype.__proto__ === null);
</script>
</body>
</html>




